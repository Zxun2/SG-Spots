{"id":"../../node_modules/core-js/modules/es.number.is-nan.js","dependencies":[{"name":"C:\\Users\\thend\\OneDrive\\Documents\\Coding Projects\\Javascript\\complete-node-bootcamp-master\\complete-node-bootcamp-master\\4-natours\\starter\\package.json","includedInParent":true,"mtime":1628586649274},{"name":"C:\\Users\\thend\\OneDrive\\Documents\\Coding Projects\\Javascript\\complete-node-bootcamp-master\\complete-node-bootcamp-master\\4-natours\\starter\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1628351166302},{"name":"../internals/export","loc":{"line":1,"column":16},"parent":"C:\\Users\\thend\\OneDrive\\Documents\\Coding Projects\\Javascript\\complete-node-bootcamp-master\\complete-node-bootcamp-master\\4-natours\\starter\\node_modules\\core-js\\modules\\es.number.is-nan.js","resolved":"C:\\Users\\thend\\OneDrive\\Documents\\Coding Projects\\Javascript\\complete-node-bootcamp-master\\complete-node-bootcamp-master\\4-natours\\starter\\node_modules\\core-js\\internals\\export.js"}],"generated":{"js":"var $ = require('../internals/export');\n\n// `Number.isNaN` method\n// https://tc39.github.io/ecma262/#sec-number.isnan\n$({ target: 'Number', stat: true }, {\n  isNaN: function isNaN(number) {\n    // eslint-disable-next-line no-self-compare\n    return number != number;\n  }\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/core-js/modules/es.number.is-nan.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/core-js/modules/es.number.is-nan.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/core-js/modules/es.number.is-nan.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/core-js/modules/es.number.is-nan.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/core-js/modules/es.number.is-nan.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/core-js/modules/es.number.is-nan.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/core-js/modules/es.number.is-nan.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/core-js/modules/es.number.is-nan.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/core-js/modules/es.number.is-nan.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/core-js/modules/es.number.is-nan.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/core-js/modules/es.number.is-nan.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}}],"sources":{"../../node_modules/core-js/modules/es.number.is-nan.js":"var $ = require('../internals/export');\n\n// `Number.isNaN` method\n// https://tc39.github.io/ecma262/#sec-number.isnan\n$({ target: 'Number', stat: true }, {\n  isNaN: function isNaN(number) {\n    // eslint-disable-next-line no-self-compare\n    return number != number;\n  }\n});\n"},"lineCount":11}},"error":null,"hash":"2bec5cce7005c714e4f9e63e32f578a9","cacheData":{"env":{}}}