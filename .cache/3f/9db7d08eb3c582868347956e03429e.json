{"id":"../../utils/catchAsync.js","dependencies":[{"name":"C:\\Users\\thend\\OneDrive\\Documents\\Coding Projects\\Javascript\\complete-node-bootcamp-master\\complete-node-bootcamp-master\\4-natours\\starter\\package.json","includedInParent":true,"mtime":1628390778832}],"generated":{"js":"//////////////////////////////\n// Wrapper Function for all Async\nvar catchAsync = function catchAsync(fn) {\n  return function (req, res, next) {\n    fn(req, res, next).catch(function (err) {\n      return next(err);\n    });\n  };\n};\n\nmodule.exports = catchAsync; // The async function is being passed as an argument to the catchAsync function.\n// The reason for this is to move the error handling outside this async function\n// to write DRY (Do Not Repeat Yourself) code. By doing so, because async functions\n//  always returns a promise (and as we know promises can either be resolved or rejected),\n//  then this allows us to pass that functionality to the catchAsync function.\n//  Now, I saw Adam mention in a response that when returning a middleware function,\n//  Express passes the 3 arguments (req, res, next).\n// Given that, had we not wrapped fn inside the anonymous function we returned,\n// then fn would be executed immediately. We don't want that.\n// We want express to execute it when a request is made. So by wrapping it inside of\n// the anonymous function, we're not executing it, because it's not a function call.\n// Now, because Express is expecting a function as an argument whenever a request is\n// made, Express will only then execute codeblock and therefore execute fn.\n// Now, fn as we remember is an async function, so if the promise returned from fn is\n// not resolved, then it's rejected and must be caught, so we'd append the .catch.\n// Also, important to rememeber that the Express HTTP methods expects a\n// callback function. Which is not possible if you return a IIFE. Hence, the need to\n// return a function."},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"../../utils/catchAsync.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"../../utils/catchAsync.js","original":{"line":2,"column":0}},{"generated":{"line":3,"column":0},"source":"../../utils/catchAsync.js","original":{"line":3,"column":0}},{"name":"catchAsync","generated":{"line":3,"column":4},"source":"../../utils/catchAsync.js","original":{"line":3,"column":6}},{"generated":{"line":3,"column":14},"source":"../../utils/catchAsync.js","original":{"line":3,"column":16}},{"generated":{"line":3,"column":17},"source":"../../utils/catchAsync.js","original":{"line":3,"column":19}},{"name":"catchAsync","generated":{"line":3,"column":26},"source":"../../utils/catchAsync.js","original":{"line":3,"column":6}},{"generated":{"line":3,"column":36},"source":"../../utils/catchAsync.js","original":{"line":3,"column":19}},{"name":"fn","generated":{"line":3,"column":37},"source":"../../utils/catchAsync.js","original":{"line":3,"column":20}},{"generated":{"line":3,"column":39},"source":"../../utils/catchAsync.js","original":{"line":3,"column":19}},{"generated":{"line":4,"column":0},"source":"../../utils/catchAsync.js","original":{"line":3,"column":19}},{"generated":{"line":4,"column":9},"source":"../../utils/catchAsync.js","original":{"line":3,"column":27}},{"name":"req","generated":{"line":4,"column":19},"source":"../../utils/catchAsync.js","original":{"line":3,"column":28}},{"generated":{"line":4,"column":22},"source":"../../utils/catchAsync.js","original":{"line":3,"column":27}},{"name":"res","generated":{"line":4,"column":24},"source":"../../utils/catchAsync.js","original":{"line":3,"column":33}},{"generated":{"line":4,"column":27},"source":"../../utils/catchAsync.js","original":{"line":3,"column":27}},{"name":"next","generated":{"line":4,"column":29},"source":"../../utils/catchAsync.js","original":{"line":3,"column":38}},{"generated":{"line":4,"column":33},"source":"../../utils/catchAsync.js","original":{"line":3,"column":27}},{"generated":{"line":4,"column":35},"source":"../../utils/catchAsync.js","original":{"line":3,"column":47}},{"name":"fn","generated":{"line":5,"column":0},"source":"../../utils/catchAsync.js","original":{"line":4,"column":2}},{"name":"fn","generated":{"line":5,"column":4},"source":"../../utils/catchAsync.js","original":{"line":4,"column":2}},{"generated":{"line":5,"column":6},"source":"../../utils/catchAsync.js","original":{"line":4,"column":4}},{"name":"req","generated":{"line":5,"column":7},"source":"../../utils/catchAsync.js","original":{"line":4,"column":5}},{"generated":{"line":5,"column":10},"source":"../../utils/catchAsync.js","original":{"line":4,"column":4}},{"name":"res","generated":{"line":5,"column":12},"source":"../../utils/catchAsync.js","original":{"line":4,"column":10}},{"generated":{"line":5,"column":15},"source":"../../utils/catchAsync.js","original":{"line":4,"column":4}},{"name":"next","generated":{"line":5,"column":17},"source":"../../utils/catchAsync.js","original":{"line":4,"column":15}},{"generated":{"line":5,"column":21},"source":"../../utils/catchAsync.js","original":{"line":4,"column":4}},{"generated":{"line":5,"column":22},"source":"../../utils/catchAsync.js","original":{"line":4,"column":2}},{"name":"catch","generated":{"line":5,"column":23},"source":"../../utils/catchAsync.js","original":{"line":4,"column":21}},{"generated":{"line":5,"column":28},"source":"../../utils/catchAsync.js","original":{"line":4,"column":2}},{"generated":{"line":5,"column":29},"source":"../../utils/catchAsync.js","original":{"line":4,"column":27}},{"name":"err","generated":{"line":5,"column":39},"source":"../../utils/catchAsync.js","original":{"line":4,"column":28}},{"generated":{"line":5,"column":42},"source":"../../utils/catchAsync.js","original":{"line":4,"column":27}},{"generated":{"line":6,"column":0},"source":"../../utils/catchAsync.js","original":{"line":4,"column":27}},{"name":"next","generated":{"line":6,"column":13},"source":"../../utils/catchAsync.js","original":{"line":4,"column":36}},{"generated":{"line":6,"column":17},"source":"../../utils/catchAsync.js","original":{"line":4,"column":40}},{"name":"err","generated":{"line":6,"column":18},"source":"../../utils/catchAsync.js","original":{"line":4,"column":41}},{"generated":{"line":6,"column":21},"source":"../../utils/catchAsync.js","original":{"line":4,"column":40}},{"generated":{"line":6,"column":22},"source":"../../utils/catchAsync.js","original":{"line":4,"column":27}},{"generated":{"line":7,"column":0},"source":"../../utils/catchAsync.js","original":{"line":4,"column":27}},{"generated":{"line":7,"column":5},"source":"../../utils/catchAsync.js","original":{"line":4,"column":2}},{"generated":{"line":8,"column":0},"source":"../../utils/catchAsync.js","original":{"line":5,"column":1}},{"generated":{"line":8,"column":3},"source":"../../utils/catchAsync.js","original":{"line":3,"column":19}},{"generated":{"line":9,"column":0},"source":"../../utils/catchAsync.js","original":{"line":3,"column":19}},{"generated":{"line":9,"column":1},"source":"../../utils/catchAsync.js","original":{"line":3,"column":0}},{"name":"module","generated":{"line":11,"column":0},"source":"../../utils/catchAsync.js","original":{"line":7,"column":0}},{"generated":{"line":11,"column":6},"source":"../../utils/catchAsync.js","original":{"line":7,"column":6}},{"name":"exports","generated":{"line":11,"column":7},"source":"../../utils/catchAsync.js","original":{"line":7,"column":7}},{"generated":{"line":11,"column":14},"source":"../../utils/catchAsync.js","original":{"line":7,"column":0}},{"name":"catchAsync","generated":{"line":11,"column":17},"source":"../../utils/catchAsync.js","original":{"line":7,"column":17}},{"generated":{"line":11,"column":27},"source":"../../utils/catchAsync.js","original":{"line":7,"column":0}},{"generated":{"line":11,"column":29},"source":"../../utils/catchAsync.js","original":{"line":9,"column":0}},{"generated":{"line":12,"column":0},"source":"../../utils/catchAsync.js","original":{"line":10,"column":0}},{"generated":{"line":13,"column":0},"source":"../../utils/catchAsync.js","original":{"line":11,"column":0}},{"generated":{"line":14,"column":0},"source":"../../utils/catchAsync.js","original":{"line":12,"column":0}},{"generated":{"line":15,"column":0},"source":"../../utils/catchAsync.js","original":{"line":13,"column":0}},{"generated":{"line":16,"column":0},"source":"../../utils/catchAsync.js","original":{"line":14,"column":0}},{"generated":{"line":17,"column":0},"source":"../../utils/catchAsync.js","original":{"line":15,"column":0}},{"generated":{"line":18,"column":0},"source":"../../utils/catchAsync.js","original":{"line":17,"column":0}},{"generated":{"line":19,"column":0},"source":"../../utils/catchAsync.js","original":{"line":18,"column":0}},{"generated":{"line":20,"column":0},"source":"../../utils/catchAsync.js","original":{"line":19,"column":0}},{"generated":{"line":21,"column":0},"source":"../../utils/catchAsync.js","original":{"line":20,"column":0}},{"generated":{"line":22,"column":0},"source":"../../utils/catchAsync.js","original":{"line":21,"column":0}},{"generated":{"line":23,"column":0},"source":"../../utils/catchAsync.js","original":{"line":22,"column":0}},{"generated":{"line":24,"column":0},"source":"../../utils/catchAsync.js","original":{"line":23,"column":0}},{"generated":{"line":25,"column":0},"source":"../../utils/catchAsync.js","original":{"line":24,"column":0}},{"generated":{"line":26,"column":0},"source":"../../utils/catchAsync.js","original":{"line":26,"column":0}},{"generated":{"line":27,"column":0},"source":"../../utils/catchAsync.js","original":{"line":27,"column":0}},{"generated":{"line":28,"column":0},"source":"../../utils/catchAsync.js","original":{"line":28,"column":0}}],"sources":{"../../utils/catchAsync.js":"//////////////////////////////\r\n// Wrapper Function for all Async\r\nconst catchAsync = (fn) => (req, res, next) => {\r\n  fn(req, res, next).catch((err) => next(err));\r\n};\r\n\r\nmodule.exports = catchAsync;\r\n\r\n// The async function is being passed as an argument to the catchAsync function.\r\n// The reason for this is to move the error handling outside this async function\r\n// to write DRY (Do Not Repeat Yourself) code. By doing so, because async functions\r\n//  always returns a promise (and as we know promises can either be resolved or rejected),\r\n//  then this allows us to pass that functionality to the catchAsync function.\r\n//  Now, I saw Adam mention in a response that when returning a middleware function,\r\n//  Express passes the 3 arguments (req, res, next).\r\n\r\n// Given that, had we not wrapped fn inside the anonymous function we returned,\r\n// then fn would be executed immediately. We don't want that.\r\n// We want express to execute it when a request is made. So by wrapping it inside of\r\n// the anonymous function, we're not executing it, because it's not a function call.\r\n// Now, because Express is expecting a function as an argument whenever a request is\r\n// made, Express will only then execute codeblock and therefore execute fn.\r\n// Now, fn as we remember is an async function, so if the promise returned from fn is\r\n// not resolved, then it's rejected and must be caught, so we'd append the .catch.\r\n\r\n// Also, important to rememeber that the Express HTTP methods expects a\r\n// callback function. Which is not possible if you return a IIFE. Hence, the need to\r\n// return a function.\r\n"},"lineCount":null}},"error":null,"hash":"7630b550e1b90e964bfd8975704fec87","cacheData":{"env":{}}}